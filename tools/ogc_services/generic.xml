<tool id="generic_ogc_processes_wrapper" name="Generic OGC Processes Wrapper" version="0.1.0">
	<description>executes OGC API Processes</description>
	<stdio>
		<exit_code range="1:" />
	</stdio>
	<requirements>
		<requirement type="package" version="4.1.2">R</requirement>
		<requirement type="package" version="0.2.3">httr2</requirement>
		<requirement type="package" version="1.2.0">getopt</requirement>
		<requirement type="package" version="1.8.7">jsonlite</requirement>
	</requirements>
	<command><![CDATA[ Rscript $__tool_directory__/generic.R --file $file ADD INPUT PARAMETERS ]]></command>
	<inputs>
		<conditional name="conditional_server">
			<param name="select_server" type="select" label="Select server">
				<option value="https://ospd.geolabs.fr:8300/ogc-api/">https://ospd.geolabs.fr:8300/ogc-api/</option>
			</param>
			<when value="https://ospd.geolabs.fr:8300/ogc-api/">
				<conditional name="conditional_process">
					<param name="select_process" type="select" label="Select process">
						<option value="OTB.MeanShiftSmoothing">OTB.MeanShiftSmoothing: This application smooths an image using the MeanShift algorithm.</option>
					</param>
					<when value="OTB.MeanShiftSmoothing">
						<param name="in" label="in" help="The input image can be any single or multiband image. Beware of pontential imbalance between bands ranges as it may alter euclidean distance." type="text" format="image/png" />
						<param name="fout" label="fout" help="This output image contains the final average spectral signatures of each pixel. The output type should be at least as wide as the input image type. Floating point encoding is advised. This output can be used as input image (in) of the LSMSSegmentation application [4,5]." type="text" />
						<param name="foutpos" label="foutpos" help="This output image contains the 2D displacement between the input pixel spatial position and the final position after convergence. Floating point encoding is mandatory. This output can be used as input image (in) of the LSMSSegmentation application [4,5]." type="text" />
						<param name="ram" label="ram" help="Available memory for processing (in MB)" type="integer" />
						<param name="spatialr" label="spatialr" help="Radius of the spatial neighborhood for averaging. Higher values will result in more smoothing and higher processing time." type="integer" />
						<param name="ranger" label="ranger" help="Threshold on spectral signature euclidean distance (expressed in radiometry unit) to consider neighborhood pixel for averaging. Higher values will be less edge-preserving (more similar to simple average in neighborhood), whereas lower values will result in less noise smoothing. Note that this parameter has no effect on processing time." type="float" />
						<param name="thres" label="thres" help="Algorithm will stop if update of average spectral signature and spatial position is below this threshold." type="float" />
						<param name="maxiter" label="maxiter" help="Algorithm will stop if convergence threshold is not met after the maximum number of iterations." type="integer" />
						<param name="rangeramp" label="rangeramp" help="Vary the range radius linearly with the central pixel intensity (experimental)." type="float" />
						<param name="modesearch" label="modesearch" help="If activated pixel iterative convergence is stopped if the path crosses an already converged pixel. Be careful, with this option, the result will slightly depend on thread number and the results will not be stable (see [4] for more details)." type="boolean" />
					</when>
				</conditional>
			</when>
		</conditional>
	</inputs>
	<ouputs />
</tool>